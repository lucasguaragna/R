xlab = "NS Atendimento (%)",
ylab = "Densidade",
prob = T,
las = 1)
lines(density(dados$`NS atendimento`), lwd = 3)
box(bty = "l")
hist(dados$`NS atendimento`,
main = "Histograma do NS Atendimento",
xlab = "NS Atendimento (%)",
ylab = "Frequência",
prob = F,
las = 1
hist(dados$`NS atendimento`,
main = "Histograma do NS Atendimento",
xlab = "NS Atendimento (%)",
ylab = "Frequência",
prob = F,
las = 1)
# Teste de Normalidade
result <- shapiro.test(dados$`NS atendimento`)
#plotando o gráfico de normalidade
qqnorm(dados$`NS atendimento`,
col = 'gray',
pch = 16,
main = NULL)
qqline(dados$`NS atendimento`)
title("Gráfico de Normalidade")
text(x = -1.5, y = 77.5,
labels = sprintf("p-value = %.4f \n w = %.4f", result$p.value, result$statistic))
lm(dados$`NS atendimento` ~ dados$Mês)
# ypretido <- predict(modelo_linear)
# Plotando o gráfico na cor preta, sem a caixa ao seu redor, Definindo o nome dos eixos
plot(dados, type = "b", main = "NS Atendimento ao longo dos meses", col = "black", bty="n", xlab="Mês (unidade)", ylab="NS Atendimento (%)", xaxt = "n", yaxt = "n")
# Adicionando a regressão linear ao gráfico
lines(x = dados$Mês, y = predict(lm(dados$`NS atendimento` ~ dados$Mês)), col = "gray", lty = 1, lwd = 2)
# Definindo o redor do gráfico (em formato de L)
box(bty = "l")
# Definindo as posições dos elementos dos eixos
axis(side = 1, las = 1)
axis(side = 2, las = 1)
# Definindo a legenda da regressão
legend(x = "bottomleft",
legend = "Regressão Linear",
lty = 1,
lwd = 2,
bty = "n",
col = "gray")
# Inserindo a linha da meta, a seta e o texto
abline(h = 75,
lty = 2,
col= "darkgray")
arrows(x0 = 20.5, y0 = 76.5,
x1 = 20.5, y1 = 75,
length = 0.1)
text(x = 20.5, y = 77.5,
labels = "Meta Grupo Vitta")
text(x = 24, y = 69, labels = "68")
bp <- boxplot(dados["NS atendimento"],
main = "Nível de Serviço de Atendimento nos últimos 24 meses",
bty = "n",
xlab = "NS Atendimento",
horizontal = T,
border = "white",
whiskcol = "black",
staplecol = "black",
outcol = "black",
col = "black",
outpch = 19,
boxwex = 0.4,
range = 0)
bp$stats
# Teste de Normalidade
result <- shapiro.test(dados$`NS atendimento`)
#plotando o gráfico de normalidade
qqnorm(dados$`NS atendimento`,
col = 'gray',
pch = 16,
main = NULL,
xlab='Valores esperados',
ylab='Valores observados')
qqline(dados$`NS atendimento`)
title("Gráfico de Normalidade")
text(x = -1.5,
y = 77.5,
labels = sprintf("p-value = %.4f \n w = %.4f",
result$p.value,
result$statistic))
# Teste de Normalidade
result <- shapiro.test(dados$`NS atendimento`)
#plotando o gráfico de normalidade
qqnorm(dados$`NS atendimento`,
col = 'gray',
pch = 16,
main = NULL)
qqline(dados$`NS atendimento`)
title("Gráfico de Normalidade")
text(x = -1.5,
y = 77.5,
labels = sprintf("p-value = %.4f \n w = %.4f",
result$p.value,
result$statistic))
library(readxl)
dados <- read_xlsx(path = "Dados_Measure.xlsx")
listaNS <- as.list(dados["NS atendimento"])
library(readxl)
dados <- read_xlsx(path = "Dados_Measure.xlsx")
listaNS <- as.list(dados)
listaNS <- as.list(dados)
print(listaNS)
listaNS <- as.list(dados)
print(dados)
listaNS <- as.list(dados)
print(dados$`Unidade BH Centro`)
listaNS <- as.list(dados)
print(dados)
library(readxl)
dados <- read_xlsx(path = "Dados_Measure.xlsx")
print(dados)
library(readxl)
dados <- read_xlsx(path = "C:\Users\lucas.guedes\OneDrive - AYT1.GROUP\Documentos\GitHub\R\Base de dados_etapa Medição.xlsx")
library(readxl)
dados <- read_xlsx(path = "Base de dados_etapa Medição.xlsx")
print(dados)
# Supondo que a tabela já esteja armazenada em um objeto chamado 'dados'
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Visualizar o data frame tratado
print(dados)
# Supondo que a tabela já esteja armazenada em um objeto chamado 'dados'
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
# Visualizar o data frame tratado
print(dados)
# Supondo que a tabela já esteja armazenada em um objeto chamado 'dados'
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Visualizar o data frame resultante
print(dados_sem_na)
# Supondo que a tabela já esteja armazenada em um objeto chamado 'dados'
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Excluir as duas primeiras linhas do data frame 'dados'
dados_sem_primeiras_linhas <- dados[-c(1, 2), ]
# Visualizar o data frame resultante
print(dados_sem_primeiras_linhas)
# Supondo que a tabela já esteja armazenada em um objeto chamado 'dados'
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Excluir as duas primeiras linhas do data frame 'dados'
dados_sem_primeiras_linhas <- dados_sem_na[-c(1, 2), ]
# Visualizar o data frame resultante
print(dados_sem_primeiras_linhas)
# Supondo que a tabela já esteja armazenada em um objeto chamado 'dados'
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
dados$`Unidade BH Centro`[dados$`Unidade BH Centro` == 781.0] <- 78.1
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Excluir as duas primeiras linhas do data frame 'dados'
dados_sem_primeiras_linhas <- dados_sem_na[-c(1, 2), ]
# Visualizar o data frame resultante
print(dados_sem_primeiras_linhas)
# Supondo que a tabela já esteja armazenada em um objeto chamado 'dados'
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
dados$`Unidade BH Pampulha`[dados$`Unidade BH Pampulha` == 781.0] <- 78.1
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Excluir as duas primeiras linhas do data frame 'dados'
dados_sem_primeiras_linhas <- dados_sem_na[-c(1, 2), ]
# Visualizar o data frame resultante
print(dados_sem_primeiras_linhas)
summary(dados_sem_primeiras_linhas)
summary(lapply(dados[,-1], summary))
dados_sem_mes <- lapply(dados[,-1], summary)
summary(dados_sem_mes)
dados_sem_mes <- lapply(dados[,-1], summary)
print(summary(dados_sem_mes))
summary(dados_sem_primeiras_linhas)
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
dados$`Unidade BH Pampulha`[dados$`Unidade BH Pampulha` == 781.0] <- 78.1
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Excluir as duas primeiras linhas do data frame 'dados' --> são de meses distantes.
dados_sem_primeiras_linhas <- dados_sem_na[-c(1, 2), ]
# Visualizar o data frame resultante
print(dados_sem_primeiras_linhas)
dados <- dados_sem_primeiras_linhas
summary(dados)
library(readxl)
dados <- read_xlsx(path = "Base de dados_etapa Medição.xlsx")
print(dados)
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
dados$`Unidade BH Pampulha`[dados$`Unidade BH Pampulha` == 781.0] <- 78.1
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Excluir as duas primeiras linhas do data frame 'dados' --> são de meses distantes.
dados_sem_primeiras_linhas <- dados_sem_na[-c(1, 2), ]
# Visualizar o data frame resultante
print(dados_sem_primeiras_linhas)
df <- dados_sem_primeiras_linhas
summary(df)
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
dados$`Unidade BH Pampulha`[dados$`Unidade BH Pampulha` == 781.0] <- 78.1
dados$`Unidade BH Belvedere`[dados$`Unidade BH Belvedere` == 0.522] <- 52.2
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Excluir as duas primeiras linhas do data frame 'dados' --> são de meses distantes.
dados_sem_primeiras_linhas <- dados_sem_na[-c(1, 2), ]
# Visualizar o data frame resultante
print(dados_sem_primeiras_linhas)
df <- dados_sem_primeiras_linhas
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
dados$`Unidade BH Pampulha`[dados$`Unidade BH Pampulha` == 781.0] <- 78.1
dados$`Unidade BH Belvedere`[dados$`Unidade BH Belvedere` == 0.522] <- 52.2
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.441] <- 44.1
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Excluir as duas primeiras linhas do data frame 'dados' --> são de meses distantes.
dados_sem_primeiras_linhas <- dados_sem_na[-c(1, 2), ]
# Visualizar o data frame resultante
print(dados_sem_primeiras_linhas)
df <- dados_sem_primeiras_linhas
# Função para remover caracteres não numéricos dos valores
remove_caracteres_nao_numericos <- function(x) {
gsub("[^[:digit:].]", "", x)
}
# Aplicar a função de remoção de caracteres não numéricos a todas as colunas do data frame
dados[, -1] <- lapply(dados[, -1], remove_caracteres_nao_numericos)
# Substituir "null" por NA
dados[dados == "null"] <- NA
# Converter os valores para o formato numérico
dados[, -1] <- sapply(dados[, -1], as.numeric)
# Substituir "0.372" por "37.2" na coluna 'Unidade Contagem'
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.372] <- 37.2
dados$`Unidade BH Pampulha`[dados$`Unidade BH Pampulha` == 781.0] <- 78.1
dados$`Unidade BH Belvedere`[dados$`Unidade BH Belvedere` == 0.522] <- 52.2
dados$`Unidade Contagem`[dados$`Unidade Contagem` == 0.441] <- 44.1
# Filtrar o data frame mantendo apenas as linhas completas (sem NA)
dados_sem_na <- dados[complete.cases(dados), ]
# Excluir as duas primeiras linhas do data frame 'dados' --> são de meses distantes.
dados_sem_primeiras_linhas <- dados_sem_na[-c(1, 2), ]
# Visualizar o data frame resultante
print(dados_sem_primeiras_linhas)
df <- dados_sem_primeiras_linhas
teste <- read_xlsx(path = "Dados_Measure.xlsx")
teste <- read_xlsx(path = "Dados_Measure.xlsx")
print(identical(teste,df))
teste <- read_xlsx(path = "Dados_Measure.xlsx")
print(setdiff(teste,df))
teste <- read_xlsx(path = "Dados_Measure.xlsx")
dif <- setdiff(teste,df)
print(identical(teste,df), dif)
teste <- read_xlsx(path = "Dados_Measure.xlsx")
dief <- setdiff(teste,df)
print(identical(teste,df), dief)
teste <- read_xlsx(path = "Dados_Measure.xlsx")
dief <- setdiff(teste,df)
print(identical(teste,df))
print(dief)
teste <- read_xlsx(path = "Dados_Measure.xlsx")
print(df)
teste <- read_xlsx(path = "Dados_Measure.xlsx")
print(df)
print(teste)
# Teste de Normalidade
result <- shapiro.test(df)
# Teste de Normalidade
centro <- shapiro.test(df$`Unidade BH Centro`)
pampulha <- shapiro.test(df$`Unidade BH Pampulha`)
belvere <- shapiro.test(df$`Unidade BH Belvere`)
# Teste de Normalidade
centro <- shapiro.test(df$`Unidade BH Centro`)
pampulha <- shapiro.test(df$`Unidade BH Pampulha`)
belvedere <- shapiro.test(df$`Unidade BH Belvedere`)
betim <- shapiro.test(df$`Unidade Betim`)
contagem <- shapiro.test(df$`Unidade Contagem`)
#plotando o gráfico de normalidade
qqnorm(df$`Unidade BH Centro`,
col = 'gray',
pch = 16,
main = NULL)
qqline(df$`Unidade BH Centro`)
title("Gráfico de Normalidade - BH Centro")
# Teste de Normalidade
centro <- shapiro.test(df$`Unidade BH Centro`)
pampulha <- shapiro.test(df$`Unidade BH Pampulha`)
belvedere <- shapiro.test(df$`Unidade BH Belvedere`)
betim <- shapiro.test(df$`Unidade Betim`)
contagem <- shapiro.test(df$`Unidade Contagem`)
#plotando o gráfico de normalidade
qqnorm(df$`Unidade BH Centro`,
col = 'gray',
pch = 16,
main = NULL)
qqline(df$`Unidade BH Centro`)
title("Gráfico de Normalidade - BH Centro")
#plotando o gráfico de normalidade
qqnorm(df$`Unidade BH Centro`,
col = 'gray',
pch = 16,
main = NULL)
qqline(df$`Unidade BH Centro`)
title("Grafico de Normalidade - BH Centro")
text(x = -1.5,
y = 77.5,
labels = sprintf("p-value = %.4f \n w = %.4f",
result$p.value,
result$statistic))
#plotando o gráfico de normalidade
qqnorm(df$`Unidade BH Centro`,
col = 'gray',
pch = 16,
main = NULL)
qqline(df$`Unidade BH Centro`)
title("Grafico de Normalidade - BH Centro")
text(x = -1,
y = 77.5,
labels = sprintf("p-value = %.4f \n w = %.4f",
result$p.value,
result$statistic))
#plotando o gráfico de normalidade
qqnorm(df$`Unidade BH Centro`,
col = 'gray',
pch = 16,
main = NULL)
qqline(df$`Unidade BH Centro`)
title("Grafico de Normalidade - BH Centro")
text(x = -1.3,
y = 77.5,
labels = sprintf("p-value = %.4f \n w = %.4f",
result$p.value,
result$statistic))
teste_normalidade <- function(dados, titulo = "Grafico de Normalidade") {
result <- shapiro.test(dados)
qqnorm(dados,
col = 'gray',
pch = 16,
main = NULL)
qqline(dados)
title(titulo)
text(x = -1.3,
y = 77.5,
labels = sprintf("p-value = %.4f \n w = %.4f",
result$p.value,
result$statistic))
}
teste_normalidade(df$`Unidade BH Centro`, titulo = "Gráfico de Normalidade - BH Centro")
teste_normalidade(df$`Unidade BH Centro`, titulo = "Grafico de Normalidade - BH Centro")
teste_normalidade(df$`Unidade BH Centro`, titulo = "Grafico de Normalidade - BH Centro")
teste_normalidade(df$`Unidade BH Pampulha`, titulo = "Grafico de Normalidade - BH Pampulha")
teste_normalidade(df$`Unidade BH Centro`, titulo = "Grafico de Normalidade - BH Centro")
teste_normalidade(df$`Unidade BH Pampulha`, titulo = "Grafico de Normalidade - BH Pampulha", y = 81)
teste_normalidade <- function(dados, titulo = "Grafico de Normalidade", x, y) {
result <- shapiro.test(dados)
qqnorm(dados,
col = 'gray',
pch = 16,
main = NULL)
qqline(dados)
title(titulo)
text(x = -1.3,
y = 77.5,
labels = sprintf("p-value = %.4f \n w = %.4f",
result$p.value,
result$statistic))
}
teste_normalidade(df$`Unidade BH Centro`, titulo = "Grafico de Normalidade - BH Centro")
teste_normalidade(df$`Unidade BH Pampulha`, titulo = "Grafico de Normalidade - BH Pampulha", y = 81)
teste_normalidade <- function(dados, titulo = "Grafico de Normalidade", x = -1.3, y = 77.5) {
result <- shapiro.test(dados)
qqnorm(dados,
col = 'gray',
pch = 16,
main = NULL)
qqline(dados)
title(titulo)
text(x = x,
y = y,
labels = sprintf("p-value = %.4f \n w = %.4f",
result$p.value,
result$statistic))
}
teste_normalidade(df$`Unidade BH Centro`, titulo = "Grafico de Normalidade - BH Centro")
teste_normalidade(df$`Unidade BH Pampulha`, titulo = "Grafico de Normalidade - BH Pampulha", y = 81)
teste_normalidade(df$`Unidade BH Centro`, titulo = "Grafico de Normalidade - BH Centro")
teste_normalidade(df$`Unidade BH Pampulha`, titulo = "Grafico de Normalidade - BH Pampulha", y = 81)
teste_normalidade(df$`Unidade BH Belvedere`, titulo = "Grafico de Normalidade - BH Pampulha")
teste_normalidade(df$`Unidade BH Centro`, titulo = "Grafico de Normalidade - BH Centro")
teste_normalidade(df$`Unidade BH Pampulha`, titulo = "Grafico de Normalidade - BH Pampulha", y = 81)
teste_normalidade(df$`Unidade BH Belvedere`, titulo = "Grafico de Normalidade - BH Bervedere")
teste_normalidade(df$`Unidade BH Centro`, titulo = "Grafico de Normalidade - BH Centro")
teste_normalidade(df$`Unidade BH Pampulha`, titulo = "Grafico de Normalidade - BH Pampulha", y = 81)
teste_normalidade(df$`Unidade BH Belvedere`, titulo = "Grafico de Normalidade - BH Bervedere", y = 61)
